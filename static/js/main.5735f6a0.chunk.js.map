{"version":3,"sources":["firebase/index.js","context/index.js","hooks/index.js","components/Sidebar.js","components/Main.js","images/Logo.png","components/User.js","components/Modal.js","components/TodoForm.js","constants/index.js","components/AddNewTodo.js","components/Calendar.js","components/ProjectForm.js","components/AddNewProject.js","components/RenameProject.js","components/Project.js","components/Projects.js","components/Todo.js","components/Next7Days.js","components/Todos.js","components/EditTodo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","TodoContext","createContext","TodoContextProvider","children","defaultProject","useState","selectedProject","setSelectedProject","undefined","selectedTodo","setSelectedTodo","todos","setTodos","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","data","docs","map","doc","id","useTodos","projectsWithStats","projects","projectWithStats","setProjectWithStats","project","numOfTodos","filter","todo","projectName","name","checked","length","useProjectWithStats","setProjects","useProjects","filteredTodos","setFilteredTodos","moment","locale","todayDateFormated","format","date","todoDate","todayDate","diffDays","diff","useFilterTodos","Provider","value","Sidebar","useContext","sidebarRef","useRef","document","addEventListener","handleClick","removeEventListener","e","target","current","contains","className","ref","Main","User","src","logo","alt","href","Modal","showModal","setShowModal","modalRef","modalAnimation","useSpring","opacity","top","config","friction","onClick","div","style","TodoForm","handleSubmit","heading","text","setText","day","setDay","time","setTime","todoProject","setTodoProject","showButtons","ptBR","utils","DateFnsUtils","onSubmit","type","onChange","placeholder","autoFocus","DatePicker","TimePicker","color","size","calendarItems","AddNewTodo","Date","preventDefault","includes","add","randomcolor","luminosity","Calendar","showMenu","setShowMenu","spin","transform","menuAnimation","display","lineHeight","item","Projectform","setValue","confirmButtonText","role","AddNewProject","setProjectName","ProjectForm","projectsRef","where","get","then","querySnapshot","empty","alert","RenameProject","newProjectName","setNewProjectName","todosRef","oldProjectName","update","forEach","Project","edit","fadeIn","from","marginTop","to","btnTransitions","useTransition","right","enter","leave","props","editProject","delete","deleteProject","Projects","setEdit","pencilColor","span","Todo","hover","setHover","deleteTodo","checkTransitions","position","onMouseEnter","onMouseLeave","checkTodo","nextDayDate","repeatedTodo","repeatNextDay","handleDelete","Next7Days","weekTodos","setWeekTodos","sortedTodosByDay","number","today","parseInt","arrangeDays","slice","concat","Todos","EditTodo","App","reactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5735f6a0.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBIu8fllerTMuYXhjOq7PTkBscBdOhi3xQ\",\r\n    authDomain: \"app-todo-d6e95.firebaseapp.com\",\r\n    projectId: \"app-todo-d6e95\",\r\n    storageBucket: \"app-todo-d6e95.appspot.com\",\r\n    messagingSenderId: \"1081905182703\",\r\n    appId: \"1:1081905182703:web:0ad9aefd4b75387844681a\"\r\n  };\r\n  \r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n  export default firebase\r\n","import React, { createContext, useState } from 'react'\r\nimport { useTodos, useProjects, useFilterTodos, useProjectWithStats } from '../hooks'\r\n\r\nconst TodoContext = createContext()\r\n\r\nfunction TodoContextProvider({children}){\r\n    const defaultProject = 'Hoje'\r\n    const [selectedProject, setSelectedProject] = useState(defaultProject)\r\n    const [selectedTodo, setSelectedTodo] = useState(undefined)\r\n    const todos = useTodos()\r\n    const projects = useProjects()\r\n    const projectsWithStats = useProjectWithStats(projects, todos)\r\n    const filteredTodos = useFilterTodos(todos, selectedProject)\r\n\r\n    return (\r\n        <TodoContext.Provider\r\n            value={\r\n                {   \r\n                    defaultProject,\r\n                    selectedProject,\r\n                    setSelectedProject,\r\n                    todos : filteredTodos,\r\n                    projects : projectsWithStats,\r\n                    selectedTodo,\r\n                    setSelectedTodo\r\n                }\r\n            }\r\n        >\r\n            {children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContextProvider, TodoContext }","import moment from 'moment'\r\nimport { useState, useEffect } from 'react'\r\nimport firebase from '../firebase'\r\nimport 'moment/locale/pt-br';\r\nimport { format } from 'date-fns';\r\n\r\nexport function useTodos(){\r\n    const [todos, setTodos] = useState([])\r\n    \r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('todos')\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {\r\n                return {\r\n                    id : doc.id,\r\n                    ...doc.data()\r\n                }\r\n            })\r\n            setTodos(data)\r\n        })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return todos\r\n}\r\n\r\nexport function useFilterTodos(todos, selectedProject){\r\n    const [filteredTodos, setFilteredTodos] = useState([])\r\n    moment.locale('pt-br');\r\n\r\n    useEffect( () => {\r\n        let data;\r\n        const todayDateFormated = moment().format('DD/MM/YYYY')\r\n        if(selectedProject === 'Hoje'){\r\n            data = todos.filter(todo => todo.date == todayDateFormated)\r\n        }else if(selectedProject === 'Próximos 7 dias'){\r\n            data = todos.filter(todo => {\r\n                const todoDate = moment(todo.date, 'DD/MM/YYYY')\r\n                const todayDate = moment(todayDateFormated, 'DD/MM/YYYY')\r\n\r\n                const diffDays = todoDate.diff(todayDate, 'days')\r\n\r\n                return diffDays >= 0 && diffDays < 7\r\n            })\r\n        }else if( selectedProject === 'Todos os dias'){\r\n            data = todos\r\n        }else{\r\n            data = todos.filter(todo => todo.projectName === selectedProject)\r\n        }\r\n\r\n        setFilteredTodos(data)\r\n    }, [todos, selectedProject])\r\n\r\n    return filteredTodos\r\n}\r\n\r\nexport function useProjects(){\r\n    const [projects, setProjects] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('projects')\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {\r\n\r\n                return {\r\n                    id : doc.id,\r\n                    name : doc.data().name\r\n                }\r\n            })\r\n            setProjects(data)\r\n        })\r\n\r\n        return() => unsubscribe()\r\n    }, [])\r\n\r\n    return projects\r\n}\r\n\r\nexport function useProjectWithStats(projects, todos) {\r\n    const [projectWithStats, setProjectWithStats] = useState([])\r\n\r\n    useEffect( () => {\r\n        const data = projects.map((project) => {\r\n            return {\r\n                numOfTodos : todos.filter( todo => todo.projectName === project.name && !todo.checked).length,\r\n                ...project\r\n            }\r\n        })\r\n\r\n        setProjectWithStats(data)\r\n    }, [projects, todos])\r\n\r\n    return projectWithStats\r\n}\r\n","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Sidebar ({children}){\r\n    //CONTEXT\r\n    const { setSelectedTodo } = useContext(TodoContext)\r\n\r\n    //REF\r\n    const sidebarRef = useRef()\r\n\r\n    useEffect( () => {\r\n        document.addEventListener('click', handleClick)\r\n\r\n        return () => document.removeEventListener('click', handleClick)\r\n    })\r\n\r\n    const handleClick = e => {\r\n        if(e.target === sidebarRef.current || sidebarRef.current.contains(e.target)){\r\n            setSelectedTodo(undefined)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className='Sidebar'\r\n            ref={sidebarRef}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\n\r\nfunction Main ({children}){\r\n\r\n    return (\r\n        <div className='Main'>\r\n            <div className=\"wrap\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","export default __webpack_public_path__ + \"static/media/Logo.db44e28d.png\";","import React from 'react'\r\nimport logo from \"../images/Logo.png\"\r\n\r\nfunction User (){\r\n\r\n    return (\r\n        <div className='User'>\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"logo\" />\r\n            </div>\r\n            <div className='info'>\r\n                <p>Artes Bytela</p>\r\n                <a href='#'>Logout!</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useRef} from 'react'  \r\nimport { useSpring, animated } from 'react-spring' \r\n\r\nfunction Modal({children, showModal, setShowModal}){\r\n    const modalRef = useRef()\r\n\r\n    const closeModal = (e) => {\r\n        if(e.target === modalRef.current){\r\n            setShowModal(false)\r\n        }\r\n    }\r\n   \r\n    //ANIMATION\r\n    const modalAnimation = useSpring({\r\n        opacity : showModal ? 1 : 0,\r\n        top : showModal ? '25%' : '0%',\r\n        config :  { friction : 15 }\r\n    })\r\n   \r\n    return (\r\n        showModal &&\r\n        <div className=\"Modal\" ref={modalRef} onClick={closeModal}>\r\n            <animated.div style={modalAnimation} className=\"container\">\r\n                {children}\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport { Bell, CalendarDay, Clock, Palette, X } from 'react-bootstrap-icons'\r\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { ptBR } from \"date-fns/locale\";\r\n\r\n\r\nfunction TodoForm ({\r\n    handleSubmit,\r\n    heading = false,\r\n    text, setText,\r\n    day, setDay,\r\n    time, setTime,\r\n    todoProject, setTodoProject,\r\n    projects,\r\n    showButtons = false,\r\n    setShowModal = false\r\n}){\r\n    return (\r\n        <MuiPickersUtilsProvider locale={ptBR} utils={DateFnsUtils}>\r\n            <form onSubmit={handleSubmit} className='TodoForm'>\r\n                <div className=\"text\">\r\n                    {\r\n                        heading && \r\n                        <h3>{heading}</h3>\r\n                    }\r\n                    <input \r\n                        type='text'\r\n                        value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                        placeholder='Tarefa...'\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"remind\">\r\n                    <Bell />\r\n                    <p>Lembre-me</p>\r\n                </div>\r\n                <div className=\"pick-day\">\r\n                    <div className=\"title\">\r\n                        <CalendarDay />\r\n                        <p>Escolha um dia</p>\r\n                    </div>\r\n                    <DatePicker \r\n                        value={day}\r\n                        onChange={day => setDay(day)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-time\">\r\n                    <div className=\"title\">\r\n                        <Clock />\r\n                        <p>Escolha um horário</p>\r\n                    </div>\r\n                    <TimePicker \r\n                        value={time}\r\n                        onChange={time => setTime(time)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-project\">\r\n                    <div className=\"title\">\r\n                        <Palette />\r\n                        <p>Escolha um projeto</p>\r\n                    </div>\r\n                    <div className=\"projects\">\r\n                        {\r\n                           projects.length > 0 ?\r\n                           projects.map( project =>\r\n                            <div \r\n                                className={`project ${todoProject === project.name ? \"active\" : \"\"}`} \r\n                                onClick={() => setTodoProject(project.name)}\r\n                                key={project.id}\r\n                            >\r\n                                {project.name}\r\n                            </div>    \r\n                        )\r\n                        :\r\n                        <div style={{color:'orange'}}>\r\n                            Por favor, adicione um projeto antes de continuar.\r\n                        </div>\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    showButtons && \r\n                    <div>\r\n                        <div className=\"cancel\" onClick={() => setShowModal(false)}>\r\n                            <X size='40'/>\r\n                        </div>\r\n                        <div className=\"confirm\">\r\n                            <button>+ Adicione uma nova tarefa</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </form>\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport default TodoForm","export const calendarItems = ['Hoje', 'Próximos 7 dias', 'Todos os dias']\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport { TodoContext } from '../context'\r\nimport Modal from './Modal'\r\nimport TodoForm from './TodoForm'\r\nimport {calendarItems } from '../constants'\r\nimport firebase from '../firebase'\r\nimport moment from 'moment'\r\nimport randomcolor from 'randomcolor'\r\n\r\nfunction AddNewTodo (){\r\n    // CONTEXT\r\n    const { projects, selectedProject } = useContext(TodoContext)\r\n\r\n    //STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState (selectedProject)\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if ( text && !calendarItems.includes(todoProject)){\r\n            firebase\r\n                .firestore()\r\n                .collection('todos')\r\n                .add (\r\n                     {\r\n                         text: text,\r\n                         date: moment(day).format('DD/MM/YYYY'),\r\n                         day: moment(day).format('d'),\r\n                         time: moment(time).format('HH:mm'),\r\n                         checked: false,\r\n                         color: randomcolor({luminosity : 'dark'}),\r\n                         projectName: todoProject\r\n                     }\r\n                )\r\n\r\n            setShowModal(false)\r\n            setText('')\r\n            setDay(new Date())\r\n            setTime(new Date())\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        setTodoProject(selectedProject)\r\n    }, [selectedProject])\r\n\r\n    return (\r\n        <div className='AddNewTodo'>\r\n            <div className=\"btn\">\r\n                <button onClick={() => setShowModal(true)}>\r\n                    + Nova Tarefa\r\n                </button>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <TodoForm\r\n                    handleSubmit={handleSubmit}\r\n                    heading='Adicionar nova tarefa'\r\n                    text={text}\r\n                    setText={setText}\r\n                    day={day}\r\n                    setDay={setDay}\r\n                    time={time}\r\n                    setTime={setTime}\r\n                    todoProject={todoProject}\r\n                    setTodoProject={setTodoProject}\r\n                    projects={projects}\r\n                    showButtons={true}\r\n                    setShowModal={setShowModal}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewTodo","import React, { useContext, useState } from 'react'\r\nimport { CalendarDate, CaretUp } from 'react-bootstrap-icons'\r\nimport {calendarItems} from '../constants'\r\nimport { TodoContext } from '../context'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Calendar (){\r\n    // STATE\r\n    const [showMenu, setShowMenu ] = useState(true)\r\n    \r\n    // CONTEXT\r\n    const { setSelectedProject } = useContext(TodoContext)\r\n    \r\n    // ANIMATION\r\n    const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 12 }\r\n    })\r\n\r\n    const menuAnimation = useSpring ({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ?  1.2 : 0\r\n    })\r\n\r\n    return (\r\n        <div className='Calendar'>\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <CalendarDate size=\"18px\"/>\r\n                    <p>Calendário</p>                                              \r\n                </div>\r\n                <animated.div \r\n                    style={spin} \r\n                    onClick={() => setShowMenu(!showMenu)}\r\n                    className=\"btns\"\r\n                >\r\n                    <span>\r\n                        <CaretUp size=\"20px\" />\r\n                    </span>\r\n                </animated.div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n                    calendarItems.map( item =>\r\n                        <div \r\n                            className=\"item\" \r\n                            key={item}\r\n                            onClick={ () => setSelectedProject(item) }\r\n                        >\r\n                            {item}\r\n                        </div>        \r\n                )\r\n                }\r\n            </animated.div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Calendar","import React from 'react'\r\n\r\nfunction Projectform({handleSubmit, heading, value, setValue, setShowModal, confirmButtonText}) {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className='ProjectForm'>\r\n            <h3>{heading}</h3>\r\n            <input \r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                type='text'\r\n                placeholder='Nome do Projeto'\r\n                autoFocus\r\n            />\r\n            <button className='cancel' role='button' onClick={() => setShowModal(false)}>\r\n                Cancelar\r\n            </button>\r\n            <button className=\"confirm\">\r\n                {confirmButtonText}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Projectform","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport { Plus } from 'react-bootstrap-icons'\r\nimport ProjectForm from './ProjectForm'\r\nimport firebase from '../firebase'\r\n\r\nfunction AddNewProject (){\r\n    const [showModal, setShowModal] = useState (false)\r\n    const [projectName, setProjectName] = useState('')\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(projectName){\r\n            const projectsRef = firebase.firestore().collection('projects')\r\n\r\n            projectsRef\r\n                .where('name', '==', projectName)\r\n                .get()\r\n                .then( querySnapshot => {\r\n                    if(querySnapshot.empty){\r\n                        projectsRef\r\n                            .add(\r\n                                {\r\n                                    name: projectName\r\n                                }\r\n                            )\r\n                    }else{\r\n                        alert('Project already exists!')\r\n                    }\r\n                })\r\n\r\n            setShowModal(false)\r\n            setProjectName('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='AddNewProject'>\r\n            <div className=\"add-button\">\r\n                <span onClick={() => setShowModal(true)}>\r\n                    <Plus size=\"20\" />\r\n                </span>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <ProjectForm \r\n                    handleSubmit={handleSubmit}\r\n                    heading='New project!'\r\n                    value={projectName}\r\n                    setValue={setProjectName}\r\n                    setShowModal={setShowModal}\r\n                    confirmButtonText='+ Add Projeto'\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewProject","import React, { useContext, useState } from 'react'\r\nimport ProjectForm from './ProjectForm'\r\nimport firebase from '../firebase'\r\nimport {TodoContext} from '../context'\r\n\r\nfunction RenameProject ({project, setShowModal}){\r\n    \r\n    //State\r\n    const [newProjectName, setNewProjectName] = useState(project.name)\r\n\r\n    //Context\r\n    const { selectedProject, setSelectedProject} = useContext(TodoContext)\r\n\r\n    //Rename Project\r\n    const RenameProject = (project, newProjectName) => {\r\n        const projectsRef = firebase.firestore().collection('projects')\r\n        const todosRef = firebase.firestore().collection('todos')\r\n\r\n        const { name : oldProjectName } = project\r\n\r\n        projectsRef\r\n            .where('name', '==', newProjectName)\r\n            .get()\r\n            .then( querySnapshot => {\r\n                if(!querySnapshot.empty){\r\n                    alert('Project with the same name already exists!')    \r\n                }else{\r\n                    projectsRef\r\n                        .doc(project.id)\r\n                        .update({\r\n                            name : newProjectName\r\n                        })\r\n                        .then( () => {\r\n                            todosRef\r\n                                .where('projectName', '==', oldProjectName)\r\n                                .get()\r\n                                .then( querySnapshot => {\r\n                                    querySnapshot.forEach( doc => {\r\n                                        doc.ref.update({\r\n                                            projectName : newProjectName\r\n                                        })\r\n                                    })\r\n                                })\r\n                                .then( () => {\r\n                                    if(selectedProject === oldProjectName){\r\n                                        setSelectedProject(newProjectName)\r\n                                    }\r\n                                })\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        RenameProject(project, newProjectName)\r\n\r\n        setShowModal(false)\r\n    }\r\n    return (\r\n        <div className='RenameProject'>\r\n            <ProjectForm \r\n                handleSubmit={handleSubmit}\r\n                heading='Editar nome do projeto!'\r\n                value={newProjectName}\r\n                setValue={setNewProjectName}\r\n                setShowModal={setShowModal}\r\n                confirmButtonText='Confirmar'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenameProject","import React, { useContext, useState } from 'react'\r\nimport { Pencil, XCircle } from 'react-bootstrap-icons'\r\nimport Modal from './Modal'\r\nimport RenameProject from './RenameProject'\r\nimport { TodoContext } from '../context'\r\nimport firebase from '../firebase'\r\nimport {useSpring, animated, useTransition } from 'react-spring'\r\n\r\n\r\n\r\nfunction Project ({project, edit}){\r\n    // CONTEXT\r\n    const { defaultProject, selectedProject, setSelectedProject } = useContext(TodoContext)\r\n\r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const deleteProject = project => {\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .doc(project.id)\r\n            .delete()\r\n            .then( () => {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('todos')\r\n                    .where('projectName', '==', project.name)\r\n                    .get()\r\n                    .then( (querySnapshot) => {\r\n                        querySnapshot.forEach( doc => {\r\n                            doc.ref.delete()\r\n                        })\r\n                    })\r\n            })\r\n            .then( () => {\r\n                if(selectedProject === project.name){\r\n                    setSelectedProject(defaultProject)\r\n                }\r\n            })\r\n    }\r\n\r\n    // ANIMATION\r\n    const fadeIn = useSpring ({\r\n        from : { marginTop : '-12px', opacity : 0},\r\n        to : { marginTop : '0px', opacity: 1}\r\n    })\r\n\r\n    const btnTransitions = useTransition(edit, {\r\n        from : { opacity : 0, right : '-20px'},\r\n        enter : { opacity : 1, right : '0px'},\r\n        leave : { opacity : 0, right : '-20px'}\r\n    })\r\n\r\n    return (\r\n        <animated.div style={fadeIn} className='Project'>\r\n            <div \r\n                className='name'\r\n                onClick={ () => setSelectedProject(project.name)}\r\n            >\r\n                {project.name}\r\n            </div>\r\n            <div className=\"btns\">\r\n               {\r\n                   btnTransitions ( (props, editProject) =>\r\n                    editProject ? \r\n                        <animated.div style={props} className=\"edit-delete\">\r\n                            <span\r\n                                className=\"edit\"\r\n                                onClick={ () => setShowModal(true)}\r\n                            >\r\n                                <Pencil size=\"13\" />\r\n                            </span>\r\n                            <span className=\"delete\"\r\n                                onClick={ () => deleteProject(project)}\r\n                            >\r\n                                <XCircle size=\"13\" />\r\n                            </span>\r\n                        </animated.div>\r\n                        :\r\n                        project.numOfTodos === 0 ?\r\n                        \"\"\r\n                        :\r\n                        <animated.div style={props} className=\"total-todos\">\r\n                            {project.numOfTodos}\r\n                        </animated.div>\r\n                   )\r\n               }\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n               <RenameProject project={project} setShowModal={setShowModal}/>\r\n            </Modal>   \r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Project","import React, {useContext, useState} from 'react'\r\nimport { CaretUp, Palette, PencilFill } from 'react-bootstrap-icons'\r\nimport { TodoContext } from '../context';\r\nimport AddNewProject from './AddNewProject'\r\nimport Project from './Project'\r\nimport {useSpring, animated } from 'react-spring'\r\n\r\nfunction Projects (){\r\n    \r\n    const [showMenu, setShowMenu] = useState(true);\r\n    const [edit, setEdit] = useState(false);\r\n    const pencilColor = edit ? \"#1EC94C\" : \"#000000\"\r\n    \r\n    //CONTEXT    \r\n    const { projects } = useContext(TodoContext)\r\n\r\n     // ANIMATION\r\n     const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 12 }\r\n    })\r\n\r\n    const menuAnimation = useSpring ({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ?  1.2 : 0\r\n    })\r\n\r\n    return (\r\n        <div className='Projects'>\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <Palette size=\"18\" />\r\n                    <p>Projetos</p>\r\n                </div>\r\n                <div className=\"btns\">\r\n                    {\r\n                        showMenu && projects.length > 0 &&\r\n                        <span className='edit' onClick={ () => setEdit(edit => !edit)}>\r\n                            <PencilFill size=\"15\" color={pencilColor} />\r\n                        </span>\r\n                    }\r\n                    <AddNewProject />\r\n                    <animated.span \r\n                        className='arrow'\r\n                        onClick={() => setShowMenu(!showMenu)}\r\n                        style={spin}\r\n                    >\r\n                        <CaretUp size=\"20\" />\r\n                    </animated.span>\r\n                </div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n                   projects.map ( project => \r\n                        <Project \r\n                            project={project}    \r\n                            key={project.id}\r\n                            edit={edit}\r\n                        />\r\n                   )\r\n                }\r\n            </animated.div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","import moment from 'moment'\r\nimport React, { useContext, useState } from 'react'\r\nimport { ArrowClockwise, CheckCircleFill, Circle, Trash } from 'react-bootstrap-icons'\r\nimport { useSpring, animated, useTransition } from 'react-spring'\r\nimport { TodoContext } from '../context'\r\nimport firebase from '../firebase'\r\n\r\nfunction Todo ({todo}){\r\n\r\n    //STATE\r\n    const [hover,setHover] = useState(false)\r\n\r\n    //CONTEXT\r\n    const { selectedTodo, setSelectedTodo } = useContext(TodoContext)\r\n\r\n    const handleDelete = todo => {\r\n        deleteTodo(todo)\r\n\r\n        if(selectedTodo === todo) {\r\n            setSelectedTodo(undefined)\r\n        }\r\n    }\r\n\r\n    const deleteTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(todo.id)\r\n            .delete()\r\n    }\r\n\r\n    const checkTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(todo.id)\r\n            .update({\r\n                checked : !todo.checked\r\n            })\r\n    }\r\n\r\n    const repeatNextDay = todo => {\r\n        const nextDayDate = moment(todo.date, 'DD/MM/YYYY').add(1, 'days')\r\n\r\n        const repeatedTodo = {\r\n            ...todo,\r\n            checked : false,\r\n            date: nextDayDate.format('DD/MM/YYYY'),\r\n            day: nextDayDate.format('d')\r\n        }\r\n\r\n        delete repeatedTodo.id\r\n\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .add(repeatedTodo)\r\n    }\r\n\r\n    // ANIMATION \r\n    const fadeIn = useSpring ({\r\n        from : { marginTop : '-12px', opacity : 0},\r\n        to : { marginTop : '0px', opacity: 1}\r\n    })\r\n\r\n    const checkTransitions = useTransition(todo.checked, {\r\n        from : { position: 'absolute', transform : 'scale(0)'},\r\n        enter : { transform : 'scale(1)'},\r\n        leave : { transform : 'scale(0)'}\r\n    })\r\n\r\n    return (\r\n        <animated.div style={fadeIn} className='Todo'>\r\n            <div \r\n                className=\"todo-container\"\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}   \r\n            >\r\n                <div \r\n                    className=\"check-todo\"\r\n                    onClick={() => checkTodo(todo)}\r\n                >\r\n                    {\r\n                        checkTransitions((props, checked) =>\r\n                            checked ? \r\n                            <animated.span style={props} className=\"checked\">\r\n                                <CheckCircleFill color=\"#bebebe\" />\r\n                            </animated.span>\r\n                            :\r\n                            <animated.span style={props} className=\"unchecked\">\r\n                                <Circle color={todo.color} />\r\n                            </animated.span>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div \r\n                    className=\"text\"\r\n                    onClick={ () => setSelectedTodo(todo)}\r\n                >\r\n                    <p style={{color : todo.checked ? '#bebebe' : '#000000'}}>{todo.text}</p>\r\n                    <span>{todo.time} - {todo.projectName}</span>\r\n                    <div className={`line ${todo.checked ? 'line-through' : ''}`}></div>\r\n                </div>\r\n                <div className=\"add-to-next-day\"\r\n                    onClick={() => repeatNextDay(todo)}\r\n                >\r\n                    {\r\n                        todo.checked &&\r\n                        <span>\r\n                            <ArrowClockwise />\r\n                        </span>\r\n                    }\r\n                </div>\r\n                <div className=\"delete-todo\"\r\n                     onClick={ () => handleDelete(todo)}\r\n                >\r\n                    {\r\n                        (hover || todo.checked) &&\r\n                        <span>\r\n                            <Trash />\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Todo","import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Todo from './Todo'\r\nimport 'moment/locale/pt-br';\r\n\r\n\r\nfunction Next7Days ({todos}){\r\n    const [weekTodos, setWeekTodos] = useState([])\r\n    moment.locale('pt-br');\r\n\r\n    \r\n    \r\n    useEffect( () => {\r\n        const days = ['0', '1', '2', '3', '4', '5', '6']\r\n        \r\n        const sortedTodosByDay = days.map( day => {\r\n            return {\r\n                todos : todos.filter ( todo => todo.day === day),\r\n                number : day\r\n            }\r\n        })\r\n\r\n        const today = parseInt(moment().format('d'))\r\n\r\n        const arrangeDays = sortedTodosByDay.slice(today).concat(sortedTodosByDay.slice(0, today))\r\n\r\n        setWeekTodos(arrangeDays)\r\n    }, [todos])\r\n\r\n    return (\r\n        <div className='Next7Days'>\r\n            {\r\n                weekTodos.map(day =>\r\n                    <div key={day.number}>\r\n                        <div className='day'>\r\n                            <div className='name'>\r\n                                {moment(day.number, 'd').format('dddd') }\r\n                                {day.number === moment().format('d') && ' (Hoje)'}\r\n                            </div>\r\n                            <div className='total-todos'>\r\n                                ({day.todos.length })\r\n                            </div>\r\n                        </div>\r\n                        <div className='todos'>\r\n                            {\r\n                                day.todos.map(todo =>\r\n                                    <Todo key={todo.id} todo={todo} />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Next7Days","import React, { useContext } from 'react'\r\nimport Todo from './Todo'\r\nimport Next7Days from './Next7Days'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Todos (){\r\n    const { todos, selectedProject } = useContext(TodoContext)\r\n\r\n    return (\r\n        <div className='Todos'>\r\n            <div className='selected-project'>\r\n                {selectedProject}\r\n            </div>\r\n            <div className=\"todos\">\r\n                {\r\n                    selectedProject === \"Próximos 7 dias\" ? \r\n                    <Next7Days todos={todos} />\r\n                    :\r\n                    todos.map( todo => \r\n                        <Todo todo={todo} key={todo.id} />\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos","import moment from 'moment'\r\nimport React, {useContext, useEffect, useState} from 'react'\r\nimport { TodoContext } from '../context'\r\nimport TodoForm from './TodoForm'\r\nimport firebase from '../firebase'\r\n\r\nfunction EditTodo (){\r\n    //STATE\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState('')\r\n    \r\n\r\n    //CONTEXT\r\n    const {selectedTodo, projects } = useContext(TodoContext)\r\n\r\n    useEffect(() => {\r\n        if(selectedTodo){\r\n            setText(selectedTodo.text)\r\n            setDay(moment(selectedTodo.date, 'DD/MM/YYYY'))\r\n            setTime(moment(selectedTodo.time, 'hh:mm A'))\r\n            setTodoProject(selectedTodo.projectName)\r\n        }\r\n    }, [selectedTodo])\r\n\r\n    useEffect(() => {\r\n        if(selectedTodo){\r\n            firebase\r\n                .firestore()\r\n                .collection('todos')\r\n                .doc(selectedTodo.id)\r\n                .update({\r\n                    text,\r\n                    date : moment(day).format('DD/MM/YYYY'),\r\n                    day : moment(day).format('d'),\r\n                    time : moment(time).format('hh:mm A'),\r\n                    projectName : todoProject\r\n                })\r\n        }\r\n    }, [text, day, time, todoProject])\r\n\r\n    function handleSubmit(e){\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                selectedTodo &&\r\n                <div className='EditTodo'>\r\n                    <div className=\"header\">\r\n                        Editar tarefa\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <TodoForm\r\n                                handleSubmit={handleSubmit}\r\n                                text={text}\r\n                                setText={setText}\r\n                                day={day}\r\n                                setDay={setDay}\r\n                                time={time}\r\n                                setTime={setTime}\r\n                                todoProject={todoProject}\r\n                                setTodoProject={setTodoProject}\r\n                                projects={projects}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTodo","import './App.css';\nimport Sidebar from './components/Sidebar'\nimport Main from './components/Main'\nimport User from './components/User'\nimport AddNewTodo from './components/AddNewTodo'\nimport Calendar from './components/Calendar'\nimport Projects from './components/Projects'\nimport Todos from './components/Todos'\nimport EditTodo from './components/EditTodo'\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidebar>\n        <User />\n        <AddNewTodo />\n        <Calendar />\n        <Projects />\n      </Sidebar>\n      <Main>\n        <Todos />\n        <EditTodo />\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport reactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { TodoContextProvider} from './context'\n\nreactDOM.render(\n  <TodoContextProvider>\n      <App/>\n  </TodoContextProvider>\n  , document.getElementById('root')\n);"],"sourceRoot":""}